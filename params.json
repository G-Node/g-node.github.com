{
  "name": "G-Node Projects",
  "tagline": "Welcome to the G-Node Projects page",
  "body": "## G-Node\r\nThe German Neuroinformatics Node (G-Node) provides various services and tools to facilitate data access, data management, and data sharing.\r\nThis page is our project showcase where you can find information about our projects.\r\nFor general information about the G-Node, please visit our [main website](http://www.g-node.org).\r\n\r\n## Projects\r\n\r\n### NIX\r\nThe [NIX](https://github.com/G-Node/nix) data model allows to store fully annotated scientific dataset, i.e. the data together with its metadata within the same container. Our aim is to achieve standardization by providing a common/generic data structure for a multitude of data types.\r\n\r\nThe current implementations store the actual data using the HDF5 file format as a storage backend.\r\n\r\nBindings for NIX exist for:\r\n- Python: [NIXPY](https://github.com/G-Node/nixpy)\r\n- Matlab: [NIX-MX](https://github.com/G-Node/nix-mx)\r\n- Java: [NIX-Java](https://github.com/G-Node/nix-java)\r\n\r\nNIXPY also includes a standalone implementation of the NIX API and therefore the C++ NIX library is not required to use it.\r\n\r\n### GIN\r\n\r\nThe **G**-Node **In**frastructure project is currently in development.\r\n\r\nThe goal of the GIN project is to develop a free data management system designed for comprehensive and reproducible management of scientific data. It keeps track of changes to the contents and organization of the files and provides secure remote access to the data. More specifically, once a directory has been put under GIN control, the contents will be synced to a dedicated GIN server. With proper authorization, data can be accessed and changed from remote clients, making it easy to work from multiple workplaces while keeping all data at hand and in sync. Data can be managed from web and file browsers as well as through a command line interface, which enables integrating data management and access into the data acquisition and analysis procedures. The system handles any kinds of directory structures and file types, and tracks all changes. The service furthermore makes it straightforward to share any data within a lab or with off-site collaborators and to work on it in parallel.\r\n\r\nThe data versioning, storage, and synchronisation part of the project is built on _git_ and _git-annex_.\r\n\r\nThe project consists of:\r\n- The authentication provider: [GIN-Auth](https://github.com/G-Node/gin-auth)\r\n- The repository server: [GIN-Repo](https://github.com/G-Node/gin-repo)\r\n- The web UI: [GIN-UI](https://github.com/G-Node/gin-ui)\r\n- The command line client: [GIN-CLI](https://github.com/G-Node/gin-cli)\r\n\r\n### Authors and Contributors\r\nChristian Garbers (@cgars), Achilleas Koutsou (@achilleas-k), Michael Sonntag (@mpsonntag)\r\nChristian Kellner (@gicmo), Adrian Stoewer (@stoewer), Jan Grewe (@jgrewe)",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}